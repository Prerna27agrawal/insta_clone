[{"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\App.js":"3","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\Navbar.js":"4","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Signup.js":"5","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Profile.js":"6","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Home.js":"7","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\SignIn.js":"8","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\CreatePost.js":"9","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\reducers\\userReducer.js":"10","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\UserProfile.js":"11","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\SubscribedUserPosts.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1777,"mtime":1612595421983,"results":"16","hashOfConfig":"14"},{"size":1558,"mtime":1612595432212,"results":"17","hashOfConfig":"14"},{"size":3756,"mtime":1612602411028,"results":"18","hashOfConfig":"14"},{"size":3132,"mtime":1612863113210,"results":"19","hashOfConfig":"14"},{"size":5735,"mtime":1612434585317,"results":"20","hashOfConfig":"14"},{"size":2172,"mtime":1611303154297,"results":"21","hashOfConfig":"14"},{"size":3126,"mtime":1610613887946,"results":"22","hashOfConfig":"14"},{"size":558,"mtime":1612862653540,"results":"23","hashOfConfig":"14"},{"size":4305,"mtime":1612601956942,"results":"24","hashOfConfig":"14"},{"size":5762,"mtime":1612595637919,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1mfm9d0",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\index.js",[],["58","59"],"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\App.js",["60","61"],"import React,{useEffect,createContext,useReducer,useContext} from 'react';\nimport NavBar from './components/Navbar';\nimport \"./App.css\"; \nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom';\nimport Home from './components/screens/Home';\nimport Profile from './components/screens/Profile';\nimport Signup from './components/screens/Signup';\nimport Signin from './components/screens/SignIn';\nimport CreatePost from './components/screens/CreatePost';\nimport UserProfile from './components/screens/UserProfile';\nimport SubscribedUserPosts from './components/screens/SubscribedUserPosts';\nimport {reducer,initialState} from './reducers/userReducer';\n export const UserContext = createContext()\n\nconst Routing = ()=>{\n  const history=useHistory();\n  const {state,dispatch} = useContext(UserContext);\n  useEffect(()=>{\n   const user =JSON.parse(localStorage.getItem(\"user\"));\n   if(user){\n     dispatch({type:\"USER\",payload:user})\n    //  history.push('/');\n   }else{\n     history.push('/signin');\n   }\n  },[])\nreturn (\n  <Switch>\n    <Route exact path=\"/\">\n      <Home />\n    </Route>\n    <Route exact path=\"/profile\">\n      <Profile />\n    </Route>  \n    <Route path=\"/signin\">\n      <Signin />\n    </Route>\n    <Route path=\"/signup\">\n      <Signup />\n    </Route>\n    <Route path=\"/create\">\n      <CreatePost />\n    </Route>\n    <Route path=\"/profile/:userid\">\n      <UserProfile />\n    </Route>\n    <Route path=\"/myfollowingpost\">\n      <SubscribedUserPosts />\n    </Route>\n  </Switch>\n  )\n}\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState);\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n    <NavBar />\n    <Routing />\n    </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Signup.js",["62"],"import React,{useState,useEffect} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst SignUp =()=>{\r\n  const history=useHistory();\r\n  const[name,setName]= useState(\"\");\r\n  const[password,setPassword]= useState(\"\");\r\n  const[email,setEmail]= useState(\"\");\r\n  const[image,setImage]= useState(\"\");\r\n  const[url,setUrl]= useState(undefined);\r\n\r\n  useEffect(()=>{\r\n      if(url){\r\n        uploadFields();\r\n      }\r\n  },[url])\r\n\r\n  const uploadPic =()=>{\r\n       const data = new FormData();\r\n      data.append(\"file\",image);\r\n      data.append(\"upload_preset\",\"insta-clone\");\r\n      data.append(\"cloud_name\",\"dhr7wlz2k\");\r\n      fetch(\"\thttps://api.cloudinary.com/v1_1/dhr7wlz2k/image/upload\",{\r\n          method:\"post\",\r\n          body:data\r\n      }).then(res=>res.json()).then(data=>{\r\n          setUrl(data.url);\r\n      }).catch(err=>{\r\n          console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  const uploadFields = ()=>{\r\n    \r\n    if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)){\r\n      return  M.toast({html:\"Please fill valid email\",classes:\"#c62828 red darken-3\"});\r\n    }\r\n        //  for sending data from 5000 host that is the serve side to localhost 3000 on which react is running\r\n         // we can either use CORS from npm lib or\r\n         // we can add \"proxy\":\"http://localhost:5000\", in package.json file\r\n           // and now we can send the relative path and it will automatically send it to server side with different ports  \r\n    fetch(\"/signup\",{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        name:name,\r\n        password:password,\r\n        email:email,\r\n        pic:url\r\n      })\r\n    }).then(res=>res.json()).then(data=>{\r\n      if(data.error){\r\n        M.toast({html:data.error,classes:\"#c62828 red darken-3\"});\r\n      }\r\n      else{\r\n        M.toast({html:data.message,classes:\"#2e7d32 green darken-3\"})\r\n        history.push('/signin');\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n  \r\n\r\n      // for sending the post request to the server host\r\n   const PostData=()=>{\r\n\r\n    if(image){\r\n      uploadPic();\r\n    }\r\n    else{\r\n      uploadFields();\r\n    }\r\n\r\n   }\r\n\r\n\r\n\r\n return (\r\n     <div className=\"mycard\">\r\n         <div className=\"card auth-card input-field \">\r\n            <h2>Insta</h2>\r\n            <input\r\n            type=\"email\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=> setEmail(e.target.value)}\r\n            />\r\n              <input\r\n            type=\"text\"\r\n            placeholder=\"name\"\r\n            value={name}\r\n            onChange={(e)=> setName(e.target.value)}\r\n            />\r\n            <input \r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e)=> setPassword(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n                 <div className=\"btn waves-effect waves-light #00796b teal darken-2\">\r\n                     <span>Profile Pic</span>\r\n                     <input type=\"file\" onChange={(e)=> setImage(e.target.files[0])} />\r\n                 </div>\r\n                 <div className=\"file-path-wrapper\" >\r\n                     <input className=\"file-path validate\" type=\"text\" />\r\n                 </div>\r\n             </div>\r\n            <button onClick={()=> PostData()} className=\"btn waves-effect waves-light #00796b teal darken-2\">\r\n               SignUp\r\n            </button>\r\n            <h5>\r\n              <Link to=\"/signin\">Already have an account ?</Link>\r\n            </h5>\r\n      </div>\r\n     </div>\r\n )\r\n}\r\nexport default SignUp;","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Profile.js",["63","64","65"],"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Home.js",["66","67","68","69","70","71","72"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport {UserContext} from '../../App';\r\nimport {Link} from 'react-router-dom';\r\n const Home=()=>{\r\n     const [data,setData] = useState([]);\r\n     const {state,dispatch} = useContext(UserContext); \r\n    useEffect(()=>{\r\n         fetch('/allpost',{\r\n             headers:{\r\n                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n             }\r\n         }).then(res=>res.json()).then(result =>{\r\n            // console.log(\"hi\") \r\n            console.log(result);\r\n             setData(result.posts);\r\n         })\r\n     },[])\r\n\r\n const likePost = (id)=>{\r\n         fetch('/like',{\r\n             method:\"put\",\r\n             headers:{\r\n                 \"Content-Type\" :\"application/json\",\r\n                 \"Authorization\":\"Bearer \"+ localStorage.getItem(\"jwt\")\r\n             },\r\n             body:JSON.stringify({\r\n                 postId:id\r\n             })\r\n         }).then(res=>res.json()).then(result =>{\r\n            //  console.log(result);\r\n             const newData = data.map(item=>{\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData);\r\n         }).catch(err=>{\r\n             console.log(err);\r\n         })\r\n     }\r\n\r\n   const unlikePost = (id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\" :\"application/json\",\r\n                \"Authorization\":\"Bearer \"+ localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json()).then(result =>{\r\n            // console.log(result);\r\n            const newData = data.map(item=>{\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:postId,\r\n                text:text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err =>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const deletePost = (postId)=>{\r\n        fetch(`/deletepost/${postId}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData);\r\n        })\r\n    }\r\n\r\n return (\r\n     <div className=\"home\">\r\n         {\r\n             data.map(item=>{\r\n                 return (\r\n                    <div className=\"card home-card\" key={item._id}>\r\n                    <h5><Link to={ item.postedBy._id != state._id ? \"/profile/\"+item.postedBy._id: \"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id == state._id \r\n                        && <i className=\"material-icons\" \r\n                             style={{float:\"right\"}}\r\n                            onClick={()=>deletePost(item._id)}> \r\n                            delete</i>  \r\n                         }</h5>\r\n                    <div className=\"card-image\">\r\n                        <img src={item.photo} \r\n                        />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                    <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                    {item.likes.includes(state._id)\r\n                    ?\r\n                    <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>  \r\n                    :\r\n                    <i className=\"material-icons\" onClick={()=>{likePost(item._id)}}>thumb_up</i>\r\n                    }\r\n                        <h6>{item.likes.length} likes</h6>\r\n                        <h6>{item.title}</h6>\r\n                        <p>{item.body}</p>\r\n                        {\r\n                            item.comments.map(record=>{\r\n                                return(\r\n                                    <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name} </span>{record.text}</h6>\r\n                                )\r\n                            })\r\n                        }\r\n                        <form onSubmit={(e)=>{ \r\n                               e.preventDefault();\r\n                            // console.log(e.target[0].value)\r\n                               makeComment(e.target[0].value,item._id)\r\n                            // console.log(e.target[0].value)\r\n                        }}>\r\n                        <input type=\"text\" placeholder=\"add a comment\" />\r\n                         </form>\r\n                    </div>\r\n                </div>\r\n                 )\r\n             })\r\n         }\r\n        \r\n     </div>\r\n )\r\n }\r\n export default Home;","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\SignIn.js",["73"],"import React,{useState,useContext} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../../App'\r\nimport M from 'materialize-css';\r\n\r\n\r\n\r\n\r\nconst SignIn =()=>{\r\n  const {state,dispatch} = useContext(UserContext);\r\n  const history=useHistory();\r\n  const[password,setPassword]= useState(\"\");\r\n  const[email,setEmail]= useState(\"\");\r\n\r\n  // for sending the post request to the server host\r\n   const PostData=()=>{\r\n    if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)){\r\n      return  M.toast({html:\"Please fill valid email\",classes:\"#c62828 red darken-3\"});\r\n    }\r\n    fetch(\"/signin\",{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        password:password,\r\n        email:email\r\n      })\r\n    }).then(res=>res.json()).then(data=>{\r\n      console.log(data);\r\n      if(data.error){\r\n        M.toast({html:data.error,classes:\"#c62828 red darken-3\"});\r\n      }\r\n      else{\r\n        localStorage.setItem(\"jwt\",data.token)\r\n        localStorage.setItem(\"user\",JSON.stringify(data.user));\r\n        dispatch({type:\"USER\",payload:data.user});\r\n        M.toast({html:data.message,classes:\"#2e7d32 green darken-3\"})\r\n        history.push('/');\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err);\r\n    })\r\n   }\r\n\r\n\r\n return (\r\n     <div className=\"mycard\">\r\n         <div className=\"card auth-card input-field \">\r\n            <h2>Insta</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=> setEmail(e.target.value)}\r\n            />\r\n            <input \r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e)=> setPassword(e.target.value)}\r\n            />\r\n            <button onClick={()=>PostData()} className=\"btn waves-effect waves-light #00796b teal darken-2\">\r\n               Login\r\n            </button>\r\n            <h5>\r\n              <Link to=\"/signup\">Don't have an account ?</Link>\r\n            </h5>\r\n      </div>\r\n     </div>\r\n )\r\n}\r\nexport default SignIn;","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\CreatePost.js",["74"]," import React, { useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n \r\n const CreatePost=()=>{\r\n  const history=useHistory();\r\n    const [title,setTitle] = useState(\"\");\r\n    const [body,setBody] = useState(\"\");\r\n    const [image,setImage] = useState(\"\");\r\n    const [url,setUrl]= useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        if(url){\r\n// for creating post\r\n        fetch(\"/createpost\",{\r\n            method:\"post\",\r\n            headers:{\r\n              \"Content-Type\":\"application/json\",\r\n              \"Authorization\":\"Bearer \"+ localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n              title:title,\r\n              body:body,\r\n              pic:url\r\n            })\r\n          }).then(res=>res.json()).then(data=>{\r\n            if(data.error){\r\n              M.toast({html:data.error,classes:\"#c62828 red darken-3\"});\r\n            }\r\n            else{\r\n              M.toast({html:\"created post successfully\",classes:\"#2e7d32 green darken-3\"})\r\n              history.push('/');\r\n            }\r\n          }).catch(err=>{\r\n            console.log(err);\r\n          })\r\n        }\r\n    },[url]);\r\n// for saving image to cloudinary\r\n    const postDetails = ()=>{\r\n        console.log(\"hi\");\r\n        const data = new FormData();\r\n        data.append(\"file\",image);\r\n        data.append(\"upload_preset\",\"insta-clone\");\r\n        data.append(\"cloud_name\",\"dhr7wlz2k\");\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/dhr7wlz2k/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json()).then(data=>{\r\n            setUrl(data.url);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n     return (\r\n         <div className=\"card input-field\"\r\n          style={{\r\n              margin:\"100px auto\",\r\n              maxWidth:\"500px\",\r\n              padding:\"20px\",\r\n              textAlign:\"center\"\r\n          }}\r\n         >\r\n             <input \r\n                type=\"text\"\r\n                placeholder=\"title\"\r\n                value={title}\r\n                onChange={(e)=>setTitle(e.target.value)}\r\n              />\r\n\r\n             <input \r\n                type=\"text\" \r\n                placeholder=\"body\" \r\n                value={body}\r\n                onChange={(e)=>setBody(e.target.value)}\r\n             />\r\n             <div className=\"file-field input-field\">\r\n                 <div className=\"btn waves-effect waves-light #00796b teal darken-2\">\r\n                     <span>Upload Image</span>\r\n                     <input type=\"file\" onChange={(e)=> setImage(e.target.files[0])} />\r\n                 </div>\r\n                 <div className=\"file-path-wrapper\" >\r\n                     <input className=\"file-path validate\" type=\"text\" />\r\n                 </div>\r\n             </div>\r\n             <button className=\"btn waves-effect waves-light #00796b teal darken-2\"\r\n                onClick={()=>postDetails()}\r\n              >\r\n               Submit Post\r\n            </button>\r\n         </div>\r\n     )\r\n }\r\n\r\n export default CreatePost;","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\reducers\\userReducer.js",["75","76","77","78"],"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\UserProfile.js",["79","80","81"],"import React,{useEffect,useState,useContext} from 'react';\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\nconst Profile =()=>{\r\n  const[userProfile,setProfile] = useState(null);  \r\n  const {state,dispatch} = useContext(UserContext)\r\n  const {userid} = useParams()\r\n  const [showfollow,setShowfollow] = useState(state?!state.following.includes(userid):true);\r\n  // console.log(userid);\r\n useEffect(()=>{\r\n   fetch(`/user/${userid}`,{\r\n     headers:{\r\n       \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n     }\r\n   }).then(res=>res.json())\r\n   .then(result=>{\r\n           console.log(result);\r\n           setProfile(result)\r\n    });\r\n },[])\r\n\r\n const followUser = ()=>{\r\n   fetch('/follow',{\r\n     method:\"put\",\r\n     headers:{\r\n       \"Content-Type\":\"application/json\",\r\n       \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n     },\r\n     body:JSON.stringify({\r\n       followId:userid   \r\n     })\r\n   }).then(res=>res.json())\r\n   .then(data=>{\r\n     console.log(data);\r\n     dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n      localStorage.setItem(\"user\",JSON.stringify(data))\r\n      setProfile((prevState)=>{\r\n        return {\r\n          ...prevState,\r\n          user:{\r\n            ...prevState.user,\r\n            followers:[...prevState.user.followers,data._id]\r\n          }\r\n        }\r\n      })\r\n     setShowfollow(false);\r\n   })\r\n }\r\n const unfollowUser = ()=>{\r\n  fetch('/unfollow',{\r\n    method:\"put\",\r\n    headers:{\r\n      \"Content-Type\":\"application/json\",\r\n      \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n    },\r\n    body:JSON.stringify({\r\n      unfollowId:userid   \r\n    })\r\n  }).then(res=>res.json())\r\n  .then(data=>{\r\n    console.log(data);\r\n    dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n     localStorage.setItem(\"user\",JSON.stringify(data))\r\n     setProfile((prevState)=>{\r\n       const newFollower= prevState.user.followers.filter(item=>item != data._id)\r\n       return {\r\n         ...prevState,\r\n         user:{\r\n           ...prevState.user,\r\n           followers:newFollower\r\n         }\r\n       }\r\n     })\r\n     setShowfollow(true);\r\n  })\r\n}\r\n return (\r\n       <>\r\n    {userProfile? \r\n               <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n               <div style={{\r\n                   display:\"flex\",\r\n                   justifyContent:\"space-around\",\r\n                  margin:\"18px 0px\",\r\n                  borderBottom:\"1px solid grey\"\r\n               }}>\r\n                   <div>\r\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                       src={userProfile.user.pic}                   \r\n                   />\r\n               </div>\r\n               <div>\r\n                   {/* <h4>{state?state.name:\"loading\"}</h4> */}\r\n                   <h4>{userProfile.user.name}</h4>\r\n                   <h4>{userProfile.user.email}</h4>\r\n                   <div style={{display:\"flex\",width:\"108%\",justifyContent:\"space-between\"}}>\r\n                       <h6>{userProfile.posts.length} posts</h6>\r\n                       <h6>{userProfile.user.followers.length} followers</h6>\r\n                       <h6>{userProfile.user.following.length} following</h6>\r\n                   </div>\r\n                   {showfollow ?\r\n                   <button\r\n                    style={{margin:\"10px\"}}\r\n                   onClick={()=>followUser()} className=\"btn waves-effect waves-light #00796b teal darken-2\">\r\n                      Follow\r\n                   </button>\r\n                   :\r\n                   <button \r\n                   style={{margin:\"10px\"}}\r\n                   onClick={()=>unfollowUser()} className=\"btn waves-effect waves-light #00796b teal darken-2\">\r\n                      UnFollow\r\n                   </button>\r\n                    } \r\n               </div>\r\n           </div>\r\n       <div className=\"gallery\">\r\n            {\r\n              userProfile.posts.map(item=>{\r\n                return(\r\n                  <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>\r\n                )\r\n              })\r\n            }\r\n       </div>\r\n              </div>\r\n     :<h2>Loading!...</h2>}\r\n            </>\r\n )\r\n}\r\nexport default Profile;","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\SubscribedUserPosts.js",["82","83","84","85","86","87","88"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport {UserContext} from '../../App';\r\nimport {Link} from 'react-router-dom';\r\n const Home=()=>{\r\n     const [data,setData] = useState([]);\r\n     const {state,dispatch} = useContext(UserContext); \r\n    useEffect(()=>{\r\n         fetch('/getsubpost',{\r\n             headers:{\r\n                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n             }\r\n         }).then(res=>res.json()).then(result =>{\r\n            // console.log(\"hi\") \r\n            console.log(result);\r\n             setData(result.posts);\r\n         })\r\n     },[])\r\n\r\n const likePost = (id)=>{\r\n         fetch('/like',{\r\n             method:\"put\",\r\n             headers:{\r\n                 \"Content-Type\" :\"application/json\",\r\n                 \"Authorization\":\"Bearer \"+ localStorage.getItem(\"jwt\")\r\n             },\r\n             body:JSON.stringify({\r\n                 postId:id\r\n             })\r\n         }).then(res=>res.json()).then(result =>{\r\n            //  console.log(result);\r\n             const newData = data.map(item=>{\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData);\r\n         }).catch(err=>{\r\n             console.log(err);\r\n         })\r\n     }\r\n\r\n   const unlikePost = (id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\" :\"application/json\",\r\n                \"Authorization\":\"Bearer \"+ localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json()).then(result =>{\r\n            // console.log(result);\r\n            const newData = data.map(item=>{\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:postId,\r\n                text:text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err =>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const deletePost = (postId)=>{\r\n        fetch(`/deletepost/${postId}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData);\r\n        })\r\n    }\r\n\r\n return (\r\n     <div className=\"home\">\r\n         {\r\n             data.map(item=>{\r\n                 return (\r\n                    <div className=\"card home-card\" key={item._id}>\r\n                    <h5 style={{padding:\"5px\"}}><Link to={ item.postedBy._id != state._id ? \"/profile/\"+item.postedBy._id: \"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id == state._id \r\n                        && <i className=\"material-icons\" \r\n                             style={{float:\"right\"}}\r\n                            onClick={()=>deletePost(item._id)}> \r\n                            delete</i>  \r\n                         }</h5>\r\n                    <div className=\"card-image\">\r\n                        <img src={item.photo} \r\n                        />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                    <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                    {item.likes.includes(state._id)\r\n                    ?\r\n                    <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>  \r\n                    :\r\n                    <i className=\"material-icons\" onClick={()=>{likePost(item._id)}}>thumb_up</i>\r\n                    }\r\n                        <h6>{item.likes.length} likes</h6>\r\n                        <h6>{item.title}</h6>\r\n                        <p>{item.body}</p>\r\n                        {\r\n                            item.comments.map(record=>{\r\n                                return(\r\n                                    <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name} </span>{record.text}</h6>\r\n                                )\r\n                            })\r\n                        }\r\n                        <form onSubmit={(e)=>{ \r\n                               e.preventDefault();\r\n                            // console.log(e.target[0].value)\r\n                               makeComment(e.target[0].value,item._id)\r\n                            // console.log(e.target[0].value)\r\n                        }}>\r\n                        <input type=\"text\" placeholder=\"add a comment\" />\r\n                         </form>\r\n                    </div>\r\n                </div>\r\n                 )\r\n             })\r\n         }\r\n        \r\n     </div>\r\n )\r\n }\r\n export default Home;",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":17,"column":10,"nodeType":"95","messageId":"96","endLine":17,"endColumn":15},{"ruleId":"97","severity":1,"message":"98","line":26,"column":5,"nodeType":"99","endLine":26,"endColumn":7,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":17,"column":5,"nodeType":"99","endLine":17,"endColumn":10,"suggestions":"102"},{"ruleId":"93","severity":1,"message":"103","line":7,"column":9,"nodeType":"95","messageId":"96","endLine":7,"endColumn":12},{"ruleId":"97","severity":1,"message":"104","line":40,"column":4,"nodeType":"99","endLine":40,"endColumn":11,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":58,"column":18,"nodeType":"108","endLine":60,"endColumn":20},{"ruleId":"93","severity":1,"message":"109","line":6,"column":19,"nodeType":"95","messageId":"96","endLine":6,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":32,"column":29,"nodeType":"112","messageId":"113","endLine":32,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":58,"column":29,"nodeType":"112","messageId":"113","endLine":58,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":86,"column":29,"nodeType":"112","messageId":"113","endLine":86,"endColumn":31},{"ruleId":"110","severity":1,"message":"114","line":121,"column":54,"nodeType":"112","messageId":"113","endLine":121,"endColumn":56},{"ruleId":"110","severity":1,"message":"111","line":121,"column":159,"nodeType":"112","messageId":"113","endLine":121,"endColumn":161},{"ruleId":"106","severity":1,"message":"107","line":128,"column":25,"nodeType":"108","endLine":129,"endColumn":27},{"ruleId":"93","severity":1,"message":"94","line":10,"column":10,"nodeType":"95","messageId":"96","endLine":10,"endColumn":15},{"ruleId":"97","severity":1,"message":"115","line":38,"column":7,"nodeType":"99","endLine":38,"endColumn":12,"suggestions":"116"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":20,"nodeType":"112","messageId":"113","endLine":4,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":7,"column":20,"nodeType":"112","messageId":"113","endLine":7,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":10,"column":20,"nodeType":"112","messageId":"113","endLine":10,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":17,"column":20,"nodeType":"112","messageId":"113","endLine":17,"endColumn":22},{"ruleId":"97","severity":1,"message":"117","line":20,"column":4,"nodeType":"99","endLine":20,"endColumn":6,"suggestions":"118"},{"ruleId":"110","severity":1,"message":"114","line":65,"column":70,"nodeType":"112","messageId":"113","endLine":65,"endColumn":72},{"ruleId":"106","severity":1,"message":"107","line":88,"column":20,"nodeType":"108","endLine":90,"endColumn":22},{"ruleId":"93","severity":1,"message":"109","line":6,"column":19,"nodeType":"95","messageId":"96","endLine":6,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":32,"column":29,"nodeType":"112","messageId":"113","endLine":32,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":58,"column":29,"nodeType":"112","messageId":"113","endLine":58,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":86,"column":29,"nodeType":"112","messageId":"113","endLine":86,"endColumn":31},{"ruleId":"110","severity":1,"message":"114","line":121,"column":78,"nodeType":"112","messageId":"113","endLine":121,"endColumn":80},{"ruleId":"110","severity":1,"message":"111","line":121,"column":183,"nodeType":"112","messageId":"113","endLine":121,"endColumn":185},{"ruleId":"106","severity":1,"message":"107","line":128,"column":25,"nodeType":"108","endLine":129,"endColumn":27},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["122"],"'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["124"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["125"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [dispatch, history]",{"range":"136","text":"137"},"Update the dependencies array to be: [uploadFields, url]",{"range":"138","text":"139"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"140","text":"141"},"Update the dependencies array to be: [body, history, title, url]",{"range":"142","text":"143"},"Update the dependencies array to be: [userid]",{"range":"144","text":"145"},[1018,1020],"[dispatch, history]",[470,475],"[uploadFields, url]",[1192,1199],"[dispatch, image, state]",[1185,1190],"[body, history, title, url]",[682,684],"[userid]"]