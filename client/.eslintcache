[{"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\App.js":"3","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\Navbar.js":"4","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Signup.js":"5","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Profile.js":"6","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Home.js":"7","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\SignIn.js":"8","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\CreatePost.js":"9","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\reducers\\userReducer.js":"10","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\UserProfile.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1622,"mtime":1612433333917,"results":"15","hashOfConfig":"13"},{"size":1480,"mtime":1611303141267,"results":"16","hashOfConfig":"13"},{"size":2448,"mtime":1611303168589,"results":"17","hashOfConfig":"13"},{"size":9124,"mtime":1612547097958,"results":"18","hashOfConfig":"13"},{"size":5735,"mtime":1612434585317,"results":"19","hashOfConfig":"13"},{"size":2172,"mtime":1611303154297,"results":"20","hashOfConfig":"13"},{"size":3126,"mtime":1610613887946,"results":"21","hashOfConfig":"13"},{"size":423,"mtime":1612454057482,"results":"22","hashOfConfig":"13"},{"size":11686,"mtime":1612546935878,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1mfm9d0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\index.js",[],["52","53"],"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\App.js",["54","55"],"import React,{useEffect,createContext,useReducer,useContext} from 'react';\nimport NavBar from './components/Navbar';\nimport \"./App.css\"; \nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom';\nimport Home from './components/screens/Home';\nimport Profile from './components/screens/Profile';\nimport Signup from './components/screens/Signup';\nimport Signin from './components/screens/SignIn';\nimport CreatePost from './components/screens/CreatePost';\nimport UserProfile from './components/screens/UserProfile';\nimport {reducer,initialState} from './reducers/userReducer';\n export const UserContext = createContext()\n\nconst Routing = ()=>{\n  const history=useHistory();\n  const {state,dispatch} = useContext(UserContext);\n  useEffect(()=>{\n   const user =JSON.parse(localStorage.getItem(\"user\"));\n   if(user){\n     dispatch({type:\"USER\",payload:user})\n    //  history.push('/');\n   }else{\n     history.push('/signin');\n   }\n  },[])\nreturn (\n  <Switch>\n    <Route exact path=\"/\">\n      <Home />\n    </Route>\n    <Route exact path=\"/profile\">\n      <Profile />\n    </Route>  \n    <Route path=\"/signin\">\n      <Signin />\n    </Route>\n    <Route path=\"/signup\">\n      <Signup />\n    </Route>\n    <Route path=\"/create\">\n      <CreatePost />\n    </Route>\n    <Route path=\"/profile/:userid\">\n      <UserProfile />\n    </Route>\n  </Switch>\n  )\n}\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState);\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n    <NavBar />\n    <Routing />\n    </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Signup.js",[],"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Profile.js",["56","57"],"C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\Home.js",["58","59","60","61","62","63","64"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport {UserContext} from '../../App';\r\nimport {Link} from 'react-router-dom';\r\n const Home=()=>{\r\n     const [data,setData] = useState([]);\r\n     const {state,dispatch} = useContext(UserContext); \r\n    useEffect(()=>{\r\n         fetch('/allpost',{\r\n             headers:{\r\n                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n             }\r\n         }).then(res=>res.json()).then(result =>{\r\n            // console.log(\"hi\") \r\n            console.log(result);\r\n             setData(result.posts);\r\n         })\r\n     },[])\r\n\r\n const likePost = (id)=>{\r\n         fetch('/like',{\r\n             method:\"put\",\r\n             headers:{\r\n                 \"Content-Type\" :\"application/json\",\r\n                 \"Authorization\":\"Bearer \"+ localStorage.getItem(\"jwt\")\r\n             },\r\n             body:JSON.stringify({\r\n                 postId:id\r\n             })\r\n         }).then(res=>res.json()).then(result =>{\r\n            //  console.log(result);\r\n             const newData = data.map(item=>{\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData);\r\n         }).catch(err=>{\r\n             console.log(err);\r\n         })\r\n     }\r\n\r\n   const unlikePost = (id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\" :\"application/json\",\r\n                \"Authorization\":\"Bearer \"+ localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json()).then(result =>{\r\n            // console.log(result);\r\n            const newData = data.map(item=>{\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:postId,\r\n                text:text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err =>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const deletePost = (postId)=>{\r\n        fetch(`/deletepost/${postId}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData);\r\n        })\r\n    }\r\n\r\n return (\r\n     <div className=\"home\">\r\n         {\r\n             data.map(item=>{\r\n                 return (\r\n                    <div className=\"card home-card\" key={item._id}>\r\n                    <h5><Link to={ item.postedBy._id != state._id ? \"/profile/\"+item.postedBy._id: \"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id == state._id \r\n                        && <i className=\"material-icons\" \r\n                             style={{float:\"right\"}}\r\n                            onClick={()=>deletePost(item._id)}> \r\n                            delete</i>  \r\n                         }</h5>\r\n                    <div className=\"card-image\">\r\n                        <img src={item.photo} \r\n                        />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                    <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                    {item.likes.includes(state._id)\r\n                    ?\r\n                    <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>  \r\n                    :\r\n                    <i className=\"material-icons\" onClick={()=>{likePost(item._id)}}>thumb_up</i>\r\n                    }\r\n                        <h6>{item.likes.length} likes</h6>\r\n                        <h6>{item.title}</h6>\r\n                        <p>{item.body}</p>\r\n                        {\r\n                            item.comments.map(record=>{\r\n                                return(\r\n                                    <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name} </span>{record.text}</h6>\r\n                                )\r\n                            })\r\n                        }\r\n                        <form onSubmit={(e)=>{ \r\n                               e.preventDefault();\r\n                            // console.log(e.target[0].value)\r\n                               makeComment(e.target[0].value,item._id)\r\n                            // console.log(e.target[0].value)\r\n                        }}>\r\n                        <input type=\"text\" placeholder=\"add a comment\" />\r\n                         </form>\r\n                    </div>\r\n                </div>\r\n                 )\r\n             })\r\n         }\r\n        \r\n     </div>\r\n )\r\n }\r\n export default Home;","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\SignIn.js",["65"],"import React,{useState,useContext} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../../App'\r\nimport M from 'materialize-css';\r\n\r\n\r\n\r\n\r\nconst SignIn =()=>{\r\n  const {state,dispatch} = useContext(UserContext);\r\n  const history=useHistory();\r\n  const[password,setPassword]= useState(\"\");\r\n  const[email,setEmail]= useState(\"\");\r\n\r\n  // for sending the post request to the server host\r\n   const PostData=()=>{\r\n    if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)){\r\n      return  M.toast({html:\"Please fill valid email\",classes:\"#c62828 red darken-3\"});\r\n    }\r\n    fetch(\"/signin\",{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        password:password,\r\n        email:email\r\n      })\r\n    }).then(res=>res.json()).then(data=>{\r\n      console.log(data);\r\n      if(data.error){\r\n        M.toast({html:data.error,classes:\"#c62828 red darken-3\"});\r\n      }\r\n      else{\r\n        localStorage.setItem(\"jwt\",data.token)\r\n        localStorage.setItem(\"user\",JSON.stringify(data.user));\r\n        dispatch({type:\"USER\",payload:data.user});\r\n        M.toast({html:data.message,classes:\"#2e7d32 green darken-3\"})\r\n        history.push('/');\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err);\r\n    })\r\n   }\r\n\r\n\r\n return (\r\n     <div className=\"mycard\">\r\n         <div className=\"card auth-card input-field \">\r\n            <h2>Insta</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=> setEmail(e.target.value)}\r\n            />\r\n            <input \r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e)=> setPassword(e.target.value)}\r\n            />\r\n            <button onClick={()=>PostData()} className=\"btn waves-effect waves-light #00796b teal darken-2\">\r\n               Login\r\n            </button>\r\n            <h5>\r\n              <Link to=\"/signup\">Don't have an account ?</Link>\r\n            </h5>\r\n      </div>\r\n     </div>\r\n )\r\n}\r\nexport default SignIn;","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\CreatePost.js",["66"]," import React, { useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n \r\n const CreatePost=()=>{\r\n  const history=useHistory();\r\n    const [title,setTitle] = useState(\"\");\r\n    const [body,setBody] = useState(\"\");\r\n    const [image,setImage] = useState(\"\");\r\n    const [url,setUrl]= useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        if(url){\r\n// for creating post\r\n        fetch(\"/createpost\",{\r\n            method:\"post\",\r\n            headers:{\r\n              \"Content-Type\":\"application/json\",\r\n              \"Authorization\":\"Bearer \"+ localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n              title:title,\r\n              body:body,\r\n              pic:url\r\n            })\r\n          }).then(res=>res.json()).then(data=>{\r\n            if(data.error){\r\n              M.toast({html:data.error,classes:\"#c62828 red darken-3\"});\r\n            }\r\n            else{\r\n              M.toast({html:\"created post successfully\",classes:\"#2e7d32 green darken-3\"})\r\n              history.push('/');\r\n            }\r\n          }).catch(err=>{\r\n            console.log(err);\r\n          })\r\n        }\r\n    },[url]);\r\n// for saving image to cloudinary\r\n    const postDetails = ()=>{\r\n        console.log(\"hi\");\r\n        const data = new FormData();\r\n        data.append(\"file\",image);\r\n        data.append(\"upload_preset\",\"insta-clone\");\r\n        data.append(\"cloud_name\",\"dhr7wlz2k\");\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/dhr7wlz2k/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json()).then(data=>{\r\n            setUrl(data.url);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n     return (\r\n         <div className=\"card input-field\"\r\n          style={{\r\n              margin:\"100px auto\",\r\n              maxWidth:\"500px\",\r\n              padding:\"20px\",\r\n              textAlign:\"center\"\r\n          }}\r\n         >\r\n             <input \r\n                type=\"text\"\r\n                placeholder=\"title\"\r\n                value={title}\r\n                onChange={(e)=>setTitle(e.target.value)}\r\n              />\r\n\r\n             <input \r\n                type=\"text\" \r\n                placeholder=\"body\" \r\n                value={body}\r\n                onChange={(e)=>setBody(e.target.value)}\r\n             />\r\n             <div className=\"file-field input-field\">\r\n                 <div className=\"btn waves-effect waves-light #00796b teal darken-2\">\r\n                     <span>Upload Image</span>\r\n                     <input type=\"file\" onChange={(e)=> setImage(e.target.files[0])} />\r\n                 </div>\r\n                 <div className=\"file-path-wrapper\" >\r\n                     <input className=\"file-path validate\" type=\"text\" />\r\n                 </div>\r\n             </div>\r\n             <button className=\"btn waves-effect waves-light #00796b teal darken-2\"\r\n                onClick={()=>postDetails()}\r\n              >\r\n               Submit Post\r\n            </button>\r\n         </div>\r\n     )\r\n }\r\n\r\n export default CreatePost;","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\reducers\\userReducer.js",["67","68","69"]," export const initialState = null;\r\n\r\nexport const reducer = (state,action)=>{\r\n    if(action.type == 'USER'){\r\n        return action.payload;\r\n    }\r\n    if(action.type == \"CLEAR\"){\r\n        return null;\r\n    }\r\n    if(action.type == \"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    return state;\r\n}","C:\\Users\\Admin\\Desktop\\React_course\\insta_clone\\client\\src\\components\\screens\\UserProfile.js",["70","71","72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":16,"column":10,"nodeType":"80","messageId":"81","endLine":16,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":25,"column":5,"nodeType":"84","endLine":25,"endColumn":7,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"86","line":6,"column":16,"nodeType":"80","messageId":"81","endLine":6,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":26,"column":18,"nodeType":"89","endLine":29,"endColumn":20},{"ruleId":"78","severity":1,"message":"86","line":6,"column":19,"nodeType":"80","messageId":"81","endLine":6,"endColumn":27},{"ruleId":"90","severity":1,"message":"91","line":32,"column":29,"nodeType":"92","messageId":"93","endLine":32,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":58,"column":29,"nodeType":"92","messageId":"93","endLine":58,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":86,"column":29,"nodeType":"92","messageId":"93","endLine":86,"endColumn":31},{"ruleId":"90","severity":1,"message":"94","line":121,"column":54,"nodeType":"92","messageId":"93","endLine":121,"endColumn":56},{"ruleId":"90","severity":1,"message":"91","line":121,"column":159,"nodeType":"92","messageId":"93","endLine":121,"endColumn":161},{"ruleId":"87","severity":1,"message":"88","line":128,"column":25,"nodeType":"89","endLine":129,"endColumn":27},{"ruleId":"78","severity":1,"message":"79","line":10,"column":10,"nodeType":"80","messageId":"81","endLine":10,"endColumn":15},{"ruleId":"82","severity":1,"message":"95","line":38,"column":7,"nodeType":"84","endLine":38,"endColumn":12,"suggestions":"96"},{"ruleId":"90","severity":1,"message":"91","line":4,"column":20,"nodeType":"92","messageId":"93","endLine":4,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":7,"column":20,"nodeType":"92","messageId":"93","endLine":7,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":10,"column":20,"nodeType":"92","messageId":"93","endLine":10,"endColumn":22},{"ruleId":"78","severity":1,"message":"79","line":7,"column":10,"nodeType":"80","messageId":"81","endLine":7,"endColumn":15},{"ruleId":"82","severity":1,"message":"97","line":20,"column":4,"nodeType":"84","endLine":20,"endColumn":6,"suggestions":"98"},{"ruleId":"90","severity":1,"message":"94","line":65,"column":70,"nodeType":"92","messageId":"93","endLine":65,"endColumn":72},{"ruleId":"87","severity":1,"message":"88","line":88,"column":20,"nodeType":"89","endLine":91,"endColumn":22},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["101"],"'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["102"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [dispatch, history]",{"range":"110","text":"111"},"Update the dependencies array to be: [body, history, title, url]",{"range":"112","text":"113"},"Update the dependencies array to be: [userid]",{"range":"114","text":"115"},[942,944],"[dispatch, history]",[1185,1190],"[body, history, title, url]",[642,644],"[userid]"]